<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>oracle.jdbc.driver.OracleDriver</value>
		</property>
		<property name="url">
			<value>jdbc:oracle:thin:@localhost:1521:xe</value>
		</property>
		<property name="username" value="javaapi"/>
		<property name="password" value="javaapi"/>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		
		<!-- DTO클래스를 처리하기 위한 setter주입. model패키지 안에 넣어놓은 클래스명으로 DTO를 인식하기 위한 작업 -->
		<property name="typeAliasesPackage" value="com.byeol.study.model"/>
		
		<!-- Mapper파일을 처리하기 위한 setter주입. model패키지 안의 Mapper XML파일을 인식하기 위한 작업 -->
		<property name="mapperLocations" value="classpath:com/byeol/study/model/*.xml"/>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 디폴트생성자가 없어서 생성자에 값을 주입하는 방식으로 객체를 만들어야 함 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>
		
</beans>
